---
import Header from '../components/HeaderIndex.astro';
import Layout from '../layouts/Layout.astro';
---

<Layout>
	<Header/>
	<section class="search-container">
		<input class="search" type="text">
	</section>
	<section class="container">
		
	</section>
	<div class="pagination">
		<button onclick="prev()" class="prev">Prev</button>
		<button onclick="next()" class="next">Next</button>
	</div>
</Layout>

<script>
	import { gsap } from "gsap";
	const getCookie = async()=>{
		const res = await fetch(`http://localhost:3000/auth`,{
			method: "GET",
			credentials: "include"
		})

		changueHeader(res.ok)
	}

	const changueHeader= async(auth: boolean)=>{
		gsap.fromTo(".header-container",{x: -500},{opacity:1, x:0,duration: 2})
		//logout btn
		if(auth){
			const header = document.querySelector(".header-container")as HTMLHeadElement
			header.innerHTML = `
					<div><img id="profile" src="/public/profile.png" alt="Profile"><img id="logout" src="/public/Logout.png" alt="Logout"></div>
					<div  class="logo"><p>Virtual Ventures</p><img class="img-logo" src="/public/icon.png" alt="Logo"></div>
					<div><img id="cart" src="/public/ShoppingCart.png" alt="Shopping Cart"></div>
				`
			// profilepage
			const profilebtn = document.querySelector("#profile") as HTMLDivElement
			profilebtn.addEventListener("click",async()=>{
				const res = await fetch("http://localhost:3000/profile",{
					method: "GET",
					credentials: "include"
				})

				if(!res.ok){
					window.location.href = "/"
				}

				window.location.href = "/profile"
			})
			// logout
			const logoutBtn =  document.querySelector("#logout") as HTMLDivElement
			logoutBtn.addEventListener("click",async()=>{
				await fetch(`http://localhost:3000/logout`,{
					method: "GET",
					credentials: "include"
				})

				window.location.href = "/"
			})
			// cart
			const userCart = document.querySelector("#cart") as HTMLDivElement
			userCart.addEventListener("click",async()=>{
				await fetch("http://localhost:3000/cart",{
					method: "GET",
					credentials: "include"
				})
				window.location.href = "/cart"
			})
			gsap.fromTo(".header-container",{x: -500},{opacity:1, x:0,duration: 2});
			gsap.fromTo(".pagination",{y: 500},{opacity:1, y:0,duration: 2});
		}
	}
	getCookie()
</script>


<script is:inline>
	let page = 1 
	const next = async()=>{
		page+=1
		const container = document.querySelector(".container")
		container.innerHTML = ""
		scroll(0,0)
		getCookie()
	}

	const prev = async()=>{
		if(page === 1){
			scroll(0,0)
			return
		}
		page -= 1
		const container = document.querySelector(".container")
		container.innerHTML = ""
		scroll(0,0)
		getCookie()
	}
	let auth 
	const getCookie = async()=>{
		const res = await fetch(`http://localhost:3000/auth`,{
			method: "GET",
			credentials: "include"
		})
		auth = res.ok
		console.log(auth)
		genArticles(res.ok)

	}


	// get products from api source
	const getProducts = async()=>{
		let res = await fetch(`https://fakestoreapi.in/api/products?page=${page}&limit=15`)
		res = await res.json()
		// return the articles
		return res
	}	

	//search
	const search = document.querySelector(".search")
	if(search){
		search.addEventListener("change",async(event)=>{
			//event.target.value
			const arr = await getProducts()
			const articles = arr.products
			const response = await fetch("http://localhost:3000/search",{
				method: "POST",
				credentials: "include",
				headers:{"Content-Type": "application/json"},
				// send the data
				body: JSON.stringify({text: event.target.value, arr: articles})
			})
			const data = await response.json()
			genItems(data, auth)
		})
	}

	const genItems = (arr, auth)=>{
		const container = document.querySelector(".container")
		container.innerHTML = ""
		arr.forEach(element => {
			//console.log(element)
			const item = document.createElement("div")
			item.classList.add("item-container")
			item.innerHTML = `
				<h5 class="item-title">${element.title}</h5>
				<div class="image-container"">
					<img class="item-image" src="${element.image}">
				</div>
				<div class="item-info">
					<p>Category: ${element.category}</p>
					<p>Price $${element.price}</p>
				</div>
			`
			item.querySelector(".image-container").addEventListener("click",()=>{
				window.location.href = `/item/${element.id}`
			})
			if(auth){
				const addToCart = document.createElement("div")
				addToCart.classList.add("add-to-cart")
				addToCart.innerHTML = `
					<img src="/public/AddCart.png" alt="Add to cart">
				`
				addToCart.addEventListener("click",async()=>{
					toast()
					await fetch("http://localhost:3000/product",{
						method: "POST",
						credentials: "include",
						headers:{"Content-Type": "application/json"},
						// send the data
						body: JSON.stringify(element)
						})
					})
					item.appendChild(addToCart)
			}
			container.appendChild(item)
		});
		gsap.fromTo(".item-container",{y: 500},{opacity:1, y:0,stagger:0.1,duration: 2});
	}

	// generate the product info in the web page
	const genArticles = async(auth)=>{
		let articles = await getProducts()
		articles = articles.products
		genItems(articles, auth)
	}
	
	const toast = ()=>{
        Toastify({
            text: "Added to Cart",
            duration: 3000,
            style: {
            background: "linear-gradient(to right, #00b09b, #96c93d)",
        }
        }).showToast();
    }

	getCookie()
</script>

<style is:inline>
	*{
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
	/* Phone */
	img:hover{
		cursor: pointer;
	}
	.search-container
	{
		margin-top: 2em;
		display: flex;
		flex-direction: row;
		justify-content: center;
	}
	.search{
		height: 3em;
		width: 20em;
		border-radius: 10px;
		color: white;
		background-color: black;
		background-image: url("/public/Search.png");
		background-repeat: no-repeat;
		padding-left: 3em;
	}
	.container{
		width: 90vw;
		display: flex;
		flex-direction: column;
		gap: 1em;
		margin: 1em auto;
		align-items: center;
	}
	
	.item-container{
		margin: 0.5em auto;
		background-color: #8d8d8d;
		color: black;
		width:18em;
		height: 20.5em;
		display: flex;
		flex-direction: column;
		justify-items: center;
		align-items: center;
		border-radius: 4px;
	}

	.item-container > h5{
		margin: .8em 1em;
		font-family: Arial, Helvetica, sans-serif;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 2;
		overflow: hidden;
		font-size: 0.8em;
	}
	
	.image-container{
		width: 10em;
		height: auto;
		margin: .5em;
	}

	.item-image{
		border-radius: 10px;
		max-width: 100%;
		width: auto;
	}
	.item-info{
		display: flex;
		flex-direction: row;
		justify-content: space-evenly;
		gap:0.4em;
	}
	.add-to-cart{
		margin: 1em 0;
		width: 100%;
		display: flex;
		justify-content: flex-end;
	}

	.add-to-cart > img{
		margin: 0 1em;
	}
	.pagination{
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 4em;
		height: 8em;
	}
	.next,.prev{
		width: 6em;
		height: 4em;
		background: none;
		border: none;
		color: white;
	}
	.next,.prev:hover{
		cursor: pointer;
	}
	@media (min-width:1200px) {	
		.container{
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			grid-template-rows: auto;
		}
	}
</style>